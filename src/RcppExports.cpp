// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// binary_search_larger_equal
int binary_search_larger_equal(NumericVector v, double data);
RcppExport SEXP _icmstate_binary_search_larger_equal(SEXP vSEXP, SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(binary_search_larger_equal(v, data));
    return rcpp_result_gen;
END_RCPP
}
// binary_search_larger
int binary_search_larger(NumericVector v, double data);
RcppExport SEXP _icmstate_binary_search_larger(SEXP vSEXP, SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(binary_search_larger(v, data));
    return rcpp_result_gen;
END_RCPP
}
// get_intensity_matrices_cpp
List get_intensity_matrices_cpp(const List& object);
RcppExport SEXP _icmstate_get_intensity_matrices_cpp(SEXP objectSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type object(objectSEXP);
    rcpp_result_gen = Rcpp::wrap(get_intensity_matrices_cpp(object));
    return rcpp_result_gen;
END_RCPP
}
// probtrans_D_cpp
SEXP probtrans_D_cpp(List int_mat, double predt, std::string direction, bool as_df);
RcppExport SEXP _icmstate_probtrans_D_cpp(SEXP int_matSEXP, SEXP predtSEXP, SEXP directionSEXP, SEXP as_dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type int_mat(int_matSEXP);
    Rcpp::traits::input_parameter< double >::type predt(predtSEXP);
    Rcpp::traits::input_parameter< std::string >::type direction(directionSEXP);
    Rcpp::traits::input_parameter< bool >::type as_df(as_dfSEXP);
    rcpp_result_gen = Rcpp::wrap(probtrans_D_cpp(int_mat, predt, direction, as_df));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_icmstate_binary_search_larger_equal", (DL_FUNC) &_icmstate_binary_search_larger_equal, 2},
    {"_icmstate_binary_search_larger", (DL_FUNC) &_icmstate_binary_search_larger, 2},
    {"_icmstate_get_intensity_matrices_cpp", (DL_FUNC) &_icmstate_get_intensity_matrices_cpp, 1},
    {"_icmstate_probtrans_D_cpp", (DL_FUNC) &_icmstate_probtrans_D_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_icmstate(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
